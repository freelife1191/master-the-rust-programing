/* match 문을 사용하여 여러 다른 패턴에 대해 튜플의 값을 확인합니다.
각각은 수행할 특정 작업에 해당합니다.
튜플의 두 번째 항목이 음수이면 코드는 두 번째 항목이 음수임을 나타내는 메시지를 인쇄하고 "작업 1"을 수행합니다.
튜플의 두 항목이 모두 0이면 코드는 두 항목이 모두 0임을 나타내는 메시지를 인쇄하고 "작업 2"를 수행합니다.
튜플이 이러한 패턴 중 하나와도 일치하지 않으면 코드는 "모두 괜찮음"을 나타내는 메시지를 인쇄합니다.
*/
fn main() {
    //다른 곳에서 포인트 정보를 얻는다고 상상해 보세요.
    let point = (0, 0);

    match point {
        // 패턴 1: 첫 번째 요소와 음수 두 번째 요소.
        // `_`는 튜플의 첫 번째 요소 값에 관심이 없다는 뜻입니다.
        (_, y) if y < 0 => {
            println!("Second element is negative:{}", y);
            println!("Take action 1");
        }

        // 패턴 2: 튜플의 두 요소가 모두 정확히 (0, 0)입니다.
        (0, 0) => {
            println!("Point is zero");
            println!("Take action 2");
        }

        // 기본 사례: 위 패턴 중 어느 것도 일치하지 않는 경우
        _ => println!("All fine"),
    }
}
